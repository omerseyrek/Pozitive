@{
    Layout = "~/Views/Shared/_listLayout.cshtml";
    ViewBag.Title = "Home Page";
    
   
    var culture = System.Globalization.CultureInfo.CurrentCulture.ToString();
}

<script src="~/Scripts/kendo/2015.1.429/cultures/kendo.culture.tr-TR.min.js"></script>
<script src="~/Scripts/kendo/2015.1.429/cultures/kendo.culture.tr.min.js"></script>

<script>
    kendo.culture("tr-TR");
</script>



@(Html.Kendo().Grid<SampleArch.Model.ViewModels.ModulesInRolesViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.Id).Width(80).Hidden(true);
        columns.Bound(p => p.RoleName).Width(150);
        columns.Bound(p => p.ModuleName).Width(150);
        columns.Bound(p => p.Add).Width(100);
        columns.Bound(p => p.Delete).Width(100);
        columns.Bound(p => p.Update).Width(100);
        columns.Bound(p => p.View).Width(100);
        columns.Command(command => { command.Edit();  }).Width(70);
    })
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .Pageable()
    .Sortable()
    .Scrollable()
    .HtmlAttributes(new { style = "height:430px;" })
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(20)
        .Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(p => p.Id);
            model.Field(p => p.Id).Editable(false);
            model.Field(p => p.RoleName).Editable(false);
            model.Field(p => p.ModuleName).Editable(false);
            model.Field(p => p.CreateDate).Editable(false);
            model.Field(p => p.CreateUserId).Editable(false);
            model.Field(p => p.UpdateDate).Editable(false);
            model.Field(p => p.UpdateUserId).Editable(false);
        })
        .Read(read => read.Action("List", "ModulesInRole"))
        .Update(update => update.Action("Edit", "ModulesInRole").Type(HttpVerbs.Post))
        .Create(create => create.Action("Edit", "ModulesInRole").Type(HttpVerbs.Post))
       
    )
)
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            configurable.show(message, "error");
        }
    }
</script>
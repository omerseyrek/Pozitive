<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title - My Telerik MVC Application</title>
    <link href="~/images/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <link href="@Url.Content("~/Content/css/style.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/bootstrap.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2015.1.429/kendo.common.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2015.1.429/kendo.mobile.all.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2015.1.429/kendo.dataviz.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2015.1.429/kendo.BlueOpal.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2015.1.429/kendo.dataviz.metro.min.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/kendo/2015.1.429/jquery.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2015.1.429/jszip.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2015.1.429/kendo.all.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2015.1.429/kendo.aspnetmvc.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo.modernizr.custom.js")"></script>
</head>
<body>
    <header></header>

    <span id="configurableNotification" style="display:none;  min-height : 100px; min-width : 250px;  "></span>
    <span id="successNotification" style="display:none;  min-height : 100px; min-width : 250px;  "></span>

    <div id="body">
        <div id="toolbarDiv" >
            <button id="formPostBotton" type="button" >@Positive.Model.Languages.Common.Save</button>
            <button id="formCloseBotton" type="button">@Positive.Model.Languages.Common.Close</button>
        </div>
        
        @RenderBody()
    </div>
   
</body>
</html>



<script type="text/javascript" >

    var editFormParam = function ()
    {
        tabStripElement = 'Id';
        saveUrl  = null;
        deleteUrl  = null;
    }
    
    var configurableNotty = undefined;
    var configurableSuccess = undefined;


    function pageIsReady() {
      
        setEditFormParam(editFormParam);

        var tabSelectorKey = '#' + editFormParam.titleField;

        editFormParam.initialAccount = $(tabSelectorKey).val();

        if(typeof onReadyBeforeInterceptor  !== "undefined")
        {
            onReadyBeforeInterceptor();
        }

        treeview = $("#treeview").data("kendoTreeView");

        NotificationConfiguration();

        if(typeof onArrangePostingParaneters !== "undefined")
        {
            onArrangePostingParaneters(editFormParam);
        }

        ArrangePostingIssues(editFormParam);

        ArrangeClosingIssues(editFormParam);

        if(typeof onReadyAfterInterceptor !== "undefined")
        {
            onReadyAfterInterceptor(editFormParam);
        }

    }


    function NotificationConfiguration()
    {
        configurableNotty = $("#configurableNotification").kendoNotification().data("kendoNotification");

        configurableSuccess = $("#successNotification").kendoNotification().data("kendoNotification");

        var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)
        var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)

        ApplyConfiguration(w, h);

        ApplySuccessConfiguration(w, h);
    }


    function ApplyConfiguration(w, h) {
        configurableNotty.hide();
        configurableNotty.setOptions({
            position: {
                top: ((h*4) / 10),
                left: ((w * 4) / 10),
                bottom: 0,
                right: 0
            },
            width: 450,
            stacking: 'down',
            autoHideAfter: 0
        });
    }


    function ApplySuccessConfiguration(w, h) {
        configurableSuccess.hide();
        configurableSuccess.setOptions({
            position: {
                top: ((h * 4) / 10),
                left: ((w * 4) / 10),
                bottom: 0,
                right: 0
            },
            button: true,
            width: 450,
            stacking: 'down'
        });
    }


    function ArrangeClosingIssues(editFormParam)
    {

        $("#formPostBotton").kendoButton({
            spriteCssClass: "k-icon k-edit"
        });

        $("#formCloseBotton").kendoButton({
            icon: "close"
        });

        kendo.init("#toolbarDiv");

        var initialTab = editFormParam.initialAccount;
        $("#formCloseBotton").click(function () {
            if(editFormParam.initialAccount == ''
                                || editFormParam.initialAccount === null
                                || editFormParam.initialAccount == undefined)
            {
                initialTab = @Html.Raw(Json.Encode(@Positive.Model.Languages.Common.NewItem));
            }

            window.parent.RemoveStripeAndReload(initialTab);
        });



    }


    function ArrangePostingIssues()
    {
        $("#formPostBotton").click(function () {
           
            var formData = new FormData($('form').get(0));  //JSON.parse(JSON.stringify(jQuery('form').serializeArray()));

            var validator = $(document.forms[0]).kendoValidator().data("kendoValidator");

            if (validator.validate()) {
                $.ajax({
                    type: "POST",
                    url: "",
                    data: formData,
                    datatype: "html",
                    processData: false, 
                    contentType: false, 
                    success: function (data) {
                   
                        if(data.Success == true)
                        {
                            if(editFormParam.initialAccount == ''
                                || editFormParam.initialAccount === null
                                || editFormParam.initialAccount == undefined)
                            {
                                initialAccount = @Html.Raw(Json.Encode(@Positive.Model.Languages.Common.NewItem));
                            }
                            else
                            {
                                initialAccount = editFormParam.initialAccount;
                            }

                            window.parent.RemoveStripeAndReload(initialAccount, data)
                        }
                        else
                        {
                            var messages = eval(data.Messages);

                            messages.forEach(function (entry) {
                                
                                configurableNotty.show(entry.Message, "warning");

                            });

                            configurableSuccess.show(@Html.Raw(Json.Encode(@Positive.Model.Languages.Common.SaveFailure)), "error");

                        }
                    },
                    failure : function(data)
                    {
                        configurableNotty.show(@Html.Raw(Json.Encode(@Positive.Model.Languages.Common.SaveFailure)), "error");
                    }
                });
            }
        });
    }

</script>

<style type="text/css">
    .closeIconStyle {
        width: 17px;
        height: 17px;
        border: 0 none !important;
        background-image: url('../../Images/close20.png');        
        position: relative;
        vertical-align: top;
    }


    .tabLabelStyle {
        position: relative;
        vertical-align: top;
    }
</style>

@RenderSection("pageScripts", false)


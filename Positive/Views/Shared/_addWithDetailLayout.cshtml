<!DOCTYPE html>
<html>
<head>
    <title>@ViewBag.Title - My Telerik MVC Application</title>
    <link href="~/images/favicon.ico" rel="shortcut icon" type="image/x-icon" />
    <link href="@Url.Content("~/Content/css/style.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/bootstrap.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2015.1.429/kendo.common.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2015.1.429/kendo.mobile.all.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2015.1.429/kendo.dataviz.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2015.1.429/kendo.BlueOpal.min.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/kendo/2015.1.429/kendo.dataviz.metro.min.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/kendo/2015.1.429/jquery.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2015.1.429/jszip.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2015.1.429/kendo.all.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2015.1.429/kendo.aspnetmvc.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo.modernizr.custom.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2015.1.429/cultures/kendo.culture.en-GB.min.js")"></script>
    <script src="@Url.Content("~/Scripts/kendo/2015.1.429/cultures/kendo.culture.tr-TR.min.js")"></script>
</head>
<body>
    <header></header>

    <span id="configurableNotification" style="display:none;  min-height : 100px; min-width : 250px;  "></span>
    <span id="successNotification" style="display:none;  min-height : 100px; min-width : 250px;  "></span>

    <div id="body">
        <div id="toolbarDiv">
            <button id="formPostBotton" type="button">@Positive.Model.Languages.Common.Save</button>
            <button id="formCloseBotton" type="button">@Positive.Model.Languages.Common.Close</button>
        </div>
        @RenderBody()
    </div>

</body>
</html>

<script type="text/javascript">

    var editFormParam = function ()
    {
        tabStripElement = 'Id';
        saveUrl  = null;
        deleteUrl  = null;
        destroyedIDs = [];
        gridObject = null;
    }

    var configurable = undefined;
    var configurableSuccess = undefined;


    function pageIsReady() {

        setEditFormParam(editFormParam);

        if(typeof onReadyBeforeInterceptor  !== "undefined")
        {
            onReadyBeforeInterceptor();
        }

        treeview = $("#treeview").data("kendoTreeView");

        NotificationConfiguration();

        if(typeof onArrangePostingParaneters !== "undefined")
        {
            onArrangePostingParaneters(editFormParam);
        }

        ArrangePostingValues();

        ArrangePostingIssues(editFormParam);

        if(typeof onReadyAfterInterceptor !== "undefined")
        {
            onReadyAfterInterceptor(editFormParam);
        }

    }


    function NotificationConfiguration()
    {
        configurable = $("#configurableNotification").kendoNotification().data("kendoNotification");

        configurableSuccess = $("#successNotification").kendoNotification().data("kendoNotification");

        var w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0)
        var h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0)

        ApplyConfiguration(w, h);

        ApplySuccessConfiguration(w, h);
    }


    function ApplyConfiguration(w, h) {
        configurable.hide();
        configurable.setOptions({
            position: {
                top: ((h*4) / 10),
                left: ((w * 4) / 10),
                bottom: 0,
                right: 0
            },
            width: 450,
            stacking: 'down'
        });
    }


    function ApplySuccessConfiguration(w, h) {
        configurableSuccess.hide();
        configurableSuccess.setOptions({
            position: {
                top: ((h * 4) / 10),
                left: ((w * 4) / 10),
                bottom: 0,
                right: 0
            },
            button: true,
            width: 450,
            stacking: 'down'
        });
    }


    function ArrangePostingValues()
    {
      
    }


    function ArrangePostingIssues()
    {
        $("#formPostBotton").kendoButton({
            spriteCssClass: "k-icon k-edit"
        });

        $("#formCloseBotton").kendoButton({
            icon: "close"
        });

        kendo.init("#toolbarDiv");

        $("#formPostBotton").click(function () {

            var formData = JSON.parse(JSON.stringify(jQuery('form').serializeArray()));

            var validator = $(document.forms[0]).kendoValidator().data("kendoValidator");

            var gridData = $("#subGrid").data("kendoGrid").dataSource.data();

            //if(gridObject != null)
            //{
            //    paramValue = getGridObjectJson(gridObject);
            //}


            formData.push({ name : 'subGridDestroyedItems', value : JSON.stringify(editFormParam.destroyedIDs)});
            formData.push({ name : 'subGridItems', value : JSON.stringify(gridData)});

            if (validator.validate()) {
                $.ajax({
                    type: "POST",
                    url: "",
                    data: formData,
                    datatype: "text",
                    success: function (data) {

                        if(data.Success == true)
                        {
                            if(editFormParam.initialAccount == ''
                                || editFormParam.initialAccount === null
                                || editFormParam.initialAccount == undefined)
                            {
                                initialAccount = @Html.Raw(Json.Encode(@Positive.Model.Languages.Common.NewItem));
                            }

                            window.parent.RemoveStripeAndReload(initialAccount, data)
                        }
                        else
                        {
                            var messages = eval(data.results);

                            configurableSuccess.show(@Html.Raw(Json.Encode(@Positive.Model.Languages.Common.SaveFailure)), "error");

                            messages.forEach(function (entry) {

                                configurableSuccess.show(entry.ErrorMessage, "error");

                            });

                        }
                    },
                    failure : function(data)
                    {
                        configurable.show(@Html.Raw(Json.Encode(@Positive.Model.Languages.Common.SaveFailure)), "error");
                    }
                });
            }
        });
    }

</script>

<style type="text/css">
    .closeIconStyle {
        /*width: 17px;
        height: 17px;*/
        border: 0 none !important;
        background-image: url('../../Images/close_button2.png');
    }


    .tabLabelStyle {
        position: relative;
        vertical-align: top;
    }
</style>

@RenderSection("pageScripts", false)

